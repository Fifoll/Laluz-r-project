head(data)
View(data)
file_path <- "C:/Users/fifi1/OneDrive/Pulpit/Zarządzanie big data/R/Projekt/laluz.csv"
# Wczytanie pliku
data <- read.csv(file_path, sep = ";")
data <- data[, -5]
data <- na.omit(data)
View(data)
bulbs_with_spray <- subset(data, sprayed == "CoatItYourself")
print(bulbs_with_spray.length)
length(bulbs_with_spray)
bulbs_with_spray <- subset(data, sprayed == "CoatItYourself")
bulbs_with_spray <- subset(data, sprayed == "CoatItYourself")
length(bulbs_with_spray)
View(bulbs_with_spray)
bulbs_with_spray <- subset(data, sprayed == "none")
View(bulbs_with_spray)
nrow(bulbs_with_spray)  # Liczba wierszy w podzbiorze
total_time <- sum(bulbs_with_spray$time_in_hours, na.rm = TRUE)
print(total_time)
nrow(bulbs_with_spray)  # Liczba wierszy w podzbiorze
total_time <- sum(bulbs_with_spray$time_in_hours, na.rm = TRUE)
print(total_time)
print(100 / 735924)
print(100 / 735924 * 100)
regular_bulb_with_spray <- subset(data, product_type == 'regular bulb
' && sprayed == "CoatItYourself");
nrow(regular_bulb_with_spray)
regular_bulb_with_spray <- subset(data, product_type == 'regular bulb
' && sprayed == "CoatItYourself");
regular_bulb_with_spray <- subset(data, product_type == 'regular bulb' && sprayed == "CoatItYourself");
nrow(regular_bulb_with_spray)
regular_bulb_with_spray <- subset(data, product_type == 'regular bulb' & sprayed == "CoatItYourself");
nrow(regular_bulb_with_spray)
regular_bulb_with_spray <- subset(data, product_type == 'regular bulb' & sprayed == "CoatItYourself");
nrow(regular_bulb_with_spray)
sum_regular_bulb_with_spray_time <- sum(regular_bulb_with_spray$time_in_hours, na.rm = TRUE)
sum_regular_bulb_with_spray_price <- sum(regular_bulb_with_spray$price_in_PLN, na.rm = TRUE)
price_per_hour_for_regular_bulb_with_spray <- sum_regular_bulb_with_spray_price / sum_regular_bulb_with_spray_time;
price_per_hour_for_regular_bulb_with_spray <- sum_regular_bulb_with_spray_price / sum_regular_bulb_with_spray_time;
print(price_per_hour_for_regular_bulb_with_spray)
regular_bulb_without_spray <- subset(data, product_type == 'regular bulb' & sprayed == "none");
regular_bulb_without_spray <- subset(data, product_type == 'regular bulb' & sprayed == "none");
sum_regular_bulb_without_spray_time <- sum(regular_bulb_without_spray$time_in_hours, na.rm = TRUE)
sum_regular_bulb_without_spray_price <- sum(regular_bulb_without_spray$price_in_PLN, na.rm = TRUE)
price_per_hour_for_regular_bulb_without_spray <- sum_regular_bulb_without_spray_price / sum_regular_bulb_without_spray_time;
print(price_per_hour_for_regular_bulb_without_spray)
double_bulb_without_spray <- subset(data, product_type == 'DoubleBulb' & sprayed == "none");
sum_double_bulb_without_spray_time <- sum(double_bulb_without_spray$time_in_hours, na.rm = TRUE)
sum_double_bulb_without_spray_price <- sum(double_bulb_without_spray$price_in_PLN, na.rm = TRUE)
price_per_hour_for_double_bulb_without_spray <- sum_douible_bulb_without_spray_price / sum_double_bulb_without_spray_time;
double_bulb_without_spray <- subset(data, product_type == 'DoubleBulb' & sprayed == "none");
sum_double_bulb_without_spray_time <- sum(double_bulb_without_spray$time_in_hours, na.rm = TRUE)
sum_double_bulb_without_spray_price <- sum(double_bulb_without_spray$price_in_PLN, na.rm = TRUE)
price_per_hour_for_double_bulb_without_spray <- sum_double_bulb_without_spray_price / sum_double_bulb_without_spray_time;
print(price_per_hour_for_double_bulb_without_spray)
double_bulb_with_spray <- subset(data, product_type == 'DoubleBulb' & sprayed == "CoatItYourself");
sum_double_bulb_with_spray_time <- sum(double_bulb_with_spray$time_in_hours, na.rm = TRUE)
sum_double_bulb_with_spray_price <- sum(double_bulb_with_spray$price_in_PLN, na.rm = TRUE)
price_per_hour_for_double_bulb_with_spray <- sum_double_bulb_with_spray_price / sum_double_bulb_with_spray_time;
print(price_per_hour_for_double_bulb_with_spray)
price_per_hour_for_regular_bulb_with_spray <- sum_regular_bulb_with_spray_time / sum_regular_bulb_with_spray_price;
print(price_per_hour_for_regular_bulb_with_spray)
print(mean_price_regular_bulb / mean_time_regular_bulb)
mean_time_regular_bulb <- mean(regular_bulb_without_spray$time_in_hours)
mean_price_regular_bulb <- mean(regular_bulb_without_spray$price_in_PLN)
print(mean_price_regular_bulb / mean_time_regular_bulb)
regular_bulb_without_spray_day_count <- sum_regular_bulb_without_spray_time / 4;
print(regular_bulb_without_spray_day_count)
# Regularna bez spraya
regular_bulb_without_spray_day_count <- sum_regular_bulb_without_spray_time / 200 / 4;
print(regular_bulb_without_spray_day_count)
# Regularna bez spraya
mean_time_regular_bulb_without_spray <- mean(sum_regular_bulb_without_spray_time);
regular_bulb_without_spray_day_count <- mean_time_regular_bulb_without_spray / 4;
print(regular_bulb_without_spray_day_count)
# Regularna bez spraya
mean_time_regular_bulb_without_spray <- mean(regular_bulb_without_spray$time_in_hours);
regular_bulb_without_spray_day_count <- mean_time_regular_bulb_without_spray / 4;
print(regular_bulb_without_spray_day_count)
regular_bulb_without_spray_year_count <- regular_bulb_without_spray_day_count / 365;
print(regular_bulb_without_spray_day_count)
regular_bulb_without_spray_year_count <- regular_bulb_without_spray_day_count / 365;
print(regular_bulb_without_spray_year_count)
# Regularna ze sprayem
mean_time_regular_bulb_with_spray <- mean(regular_bulb_with_spray$time_in_hours);
regular_bulb_with_spray_day_count <- mean_time_regular_bulb_with_spray / 4;
regular_bulb_with_spray_year_count <- regular_bulb_with_spray_day_count / 365;
print(regular_bulb_with_spray_year_count)
# double bez spraya
mean_time_double_bulb_without_spray <- mean(double_bulb_without_spray$time_in_hours);
double_bulb_without_spray_day_count <- mean_time_double_bulb_without_spray / 4;
double_bulb_without_spray_year_count <- double_bulb_without_spray_day_count / 365;
print(double_bulb_without_spray_year_count)
# double ze sprayem
mean_time_double_bulb_with_spray <- mean(double_bulb_with_spray$time_in_hours);
double_bulb_with_spray_day_count <- mean_time_double_bulb_with_spray / 4;
double_bulb_with_spray_year_count <- double_bulb_with_spray_day_count / 365;
print(double_bulb_with_spray_year_count)
print(total_time)
##  Policz, na jak długo starczy w tym modelowym gospodarstwie domowym jedno opakowanie sprayu.
# Zakłądamy że mamy 10 żarówek w gospodarstwie i żarówki średnio świecą się 4h dziennie, co ooznacza że dziennie musimy użyć sprayu 40 razy
bulb_count_in_house <- 10;
bulb_light_per_day <- 4;
spray_count_day <- total_time_spray / bulb_light_per_day / bulb_count_in_house;
print(spray_count_day)
total_time_spray <- sum(bulbs_with_spray$time_in_hours, na.rm = TRUE)
total_time_spray <- sum(bulbs_with_spray$time_in_hours, na.rm = TRUE)
print(total_time_spray)
##  Policz, na jak długo starczy w tym modelowym gospodarstwie domowym jedno opakowanie sprayu.
# Zakłądamy że mamy 10 żarówek w gospodarstwie i żarówki średnio świecą się 4h dziennie, co ooznacza że dziennie musimy użyć sprayu 40 razy
bulb_count_in_house <- 10;
bulb_light_per_day <- 4;
spray_count_day <- total_time_spray / bulb_light_per_day / bulb_count_in_house;
print(spray_count_day)
bulbs_with_spray <- subset(data, sprayed == "CoatItYourself")
nrow(bulbs_with_spray)  # Liczba wierszy w podzbiorze
##  Policz, na jak długo starczy w tym modelowym gospodarstwie domowym jedno opakowanie sprayu.
# Zakłądamy że mamy 10 żarówek w gospodarstwie i żarówki średnio świecą się 4h dziennie, co ooznacza że dziennie musimy użyć sprayu 40 razy
bulb_count_in_house <- 20;
bulb_light_per_day <- 4;
spray_count_day <- total_time_spray / bulb_light_per_day / bulb_count_in_house;
print(spray_count_day)
spray_count_years <- total_time_spray / bulb_light_per_day / bulb_count_in_house / 365;
print(spray_count_day)
print(spray_count_years)
# Test normalności - Shapiro-Wilk
shapiro_test_regular_bulb <- shapiro.test(regular_bulb__without_spray_filtered_data$time_in_hours)
shapiro_test_doubled_bulb <- shapiro.test(doubled_bulb_without_spray_filtered_data$time_in_hours)
# Wyświetlanie wyników testów
print(shapiro_test_regular_bulb)
print(shapiro_test_doubled_bulb)
# Test normalności - Shapiro-Wilk
shapiro_test_regular_bulb <- shapiro.test(regular_bulb__without_spray_filtered_data$time_in_hours)
# Filtrowanie danych
regular_bulb__without_spray_filtered_data <- subset(data, product_type == "regular bulb" & sprayed == "none")
doubled_bulb_without_spray_filtered_data <- subset(data, product_type == "DoubleBulb" & sprayed == "none")
regular_bulb__without_spray_mean_time <- mean(regular_bulb__without_spray_filtered_data$time_in_hours, na.rm = TRUE)
doubled_bulb__without_spray_mean_time <- mean(doubled_bulb_without_spray_filtered_data$time_in_hours, na.rm = TRUE)
# TEST F aby sprawdzić czy wariancje są równe czy różne żeby potem do testu wrzucić
var_test_result <- var.test(
regular_bulb__without_spray_filtered_data$time_in_hours,
doubled_bulb_without_spray_filtered_data$time_in_hours
)
# Wynik
print(var_test_result)
# Test normalności - Shapiro-Wilk
shapiro_test_regular_bulb <- shapiro.test(regular_bulb__without_spray_filtered_data$time_in_hours)
shapiro_test_doubled_bulb <- shapiro.test(doubled_bulb_without_spray_filtered_data$time_in_hours)
# Wyświetlanie wyników testów
print(shapiro_test_regular_bulb)
print(shapiro_test_doubled_bulb)
# Wykres Q-Q dla obu zbiorów danych
par(mfrow=c(1,2))  # Ustawienie wykresów obok siebie
qqnorm(regular_bulb__without_spray_filtered_data$time_in_hours, main = "Q-Q plot: Regular Bulb")
qqline(regular_bulb__without_spray_filtered_data$time_in_hours)
qqnorm(doubled_bulb_without_spray_filtered_data$time_in_hours, main = "Q-Q plot: Doubled Bulb")
# test manna whitneya
# Test Manna-Whitneya
mann_whitney_result <- wilcox.test(regular_bulb__without_spray_filtered_data$time_in_hours,
doubled_bulb_without_spray_filtered_data$time_in_hours)
# Wyświetlanie wyników testu
print(mann_whitney_result)
